//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil
//     Les modifications apportées à ce fichier seront perdues si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

public class Partie : IPartie
{
	private ICarte _carte;
	private Dictionary<int, IJoueur> _joueurs;
	private int _toursRestants;
	private IUnite _uniteCourante;
	private string _nom;
	private IJoueur _joueurCourant;

	public virtual List<IUnite> getUnites()
	{
        List<IUnite> res= new List<IUnite>();
		foreach(KeyValuePair<int, IJoueur> j in _joueurs) {
           /* TODO j.Value.GetPeuple; */
        }
        return res;
	}

	public virtual void attaque(Direction Direction dir)
	{
		throw new System.NotImplementedException();
	}

	public virtual void deplacement(Direction dir)
	{
		throw new System.NotImplementedException();
	}

	public virtual void passerTour()
	{
		throw new System.NotImplementedException();
	}

	public virtual IUnite getUniteCourante()
	{
		throw new System.NotImplementedException();
	}

	public virtual bool nouveauTour()
	{
		throw new System.NotImplementedException();
	}

	public virtual Vector<Coordonnee> getDirectionsAutorisees(Coordonnee c)
	{
		throw new System.NotImplementedException();
	}

	public virtual Vector<TypeCase> getGrille()
	{
		throw new System.NotImplementedException();
	}

	public virtual void enregistrer()
	{
		throw new System.NotImplementedException();
	}

	public virtual void enregistrerSous()
	{
		throw new System.NotImplementedException();
	}

	public virtual Vector<int> getPointsJoueurs()
	{
		throw new System.NotImplementedException();
	}

	public virtual void passerTourJoueur()
	{
		throw new System.NotImplementedException();
	}

	private void acualiserPointsJoueurs()
	{
		throw new System.NotImplementedException();
	}

	public virtual void selectionner(IUnite unite)
	{
		throw new System.NotImplementedException();
	}

	private Vector<IUnite> getUntesCible(Coordonnee c)
	{
		throw new System.NotImplementedException();
	}

}

